main :: Bool
main = True
------------ desugared source code
main :: Bool
main
  = _lhs
    main
    (_rhs
      ((\(a :: _) -> case'List
          (\(_ :: _) -> _)
          undefined
          (\(b :: _) (c :: _) -> case'Bool
            (\(_ :: _) -> _)
            undefined
            (case'List
              (\(_ :: _) -> _)
              undefined
              (\(d :: _) (e :: _) -> case'Bool
                (\(_ :: _) -> _)
                undefined
                (case'List
                  (\(_ :: _) -> _)
                  undefined
                  (\(f :: _) (g :: _) -> case'Bool
                    (\(_ :: _) -> _)
                    undefined
                    (case'List (\(_ :: _) -> _) True (\(_ :: _) (_ :: _) -> undefined) g)
                    (3.0 == f))
                  e)
                (2.0 == d))
              c)
            (1.0 == b))
          a)
        (fromTo 1.0 3.0)))
------------ core code
main :: Bool
main = _rhs True
------------ tooltips
testdata/fromto.lc 1:9-1:13
    Type
testdata/fromto.lc 2:1-2:5
    Bool
testdata/fromto.lc 2:8-3:33
    Bool
testdata/fromto.lc 2:14-2:20
    Float -> Float -> [Float]
testdata/fromto.lc 2:14-2:24
    Float -> [Float]
testdata/fromto.lc 2:14-2:28
    [Float]
testdata/fromto.lc 2:21-2:24
    Float
testdata/fromto.lc 2:25-2:28
    Float
testdata/fromto.lc 3:29-3:33
    Bool | Bool | Bool | Bool | Bool | Bool | Bool
------------ warnings
Uncovered pattern(s) at testdata/fromto.lc:2:13:
main = case (fromTo 1.0 3.0) of
            ^^^^^^^^^^^^^^^^
Missing case(s):
     []
     (_ : _) | False <- 1.0 == _b
     [_] | True <- 1.0 == _b
     (_ : _ : _) | True <- 1.0 == _b, False <- 2.0 == _b
     [_, _] | True <- 1.0 == _b, True <- 2.0 == _b
     (_ : _ : _ : _) | True <- 1.0 == _b, True <- 2.0 == _b, False <- 3.0 == _b
     (_ : _ : _ : _ : _) | True <- 1.0 == _b, True <- 2.0 == _b, True <- 3.0 == _b