Pipeline
  { info = "generated by lambdcube-compiler 0.5.0.0"
  , backend = OpenGL33
  , textures = []
  , samplers = []
  , targets =
      [ RenderTarget
          { renderTargets =
              [ TargetItem
                  { targetSemantic = Depth , targetRef = Just (Framebuffer Depth) }
              , TargetItem
                  { targetSemantic = Color , targetRef = Just (Framebuffer Color) }
              ]
          }
      ]
  , programs =
      [ Program
          { programUniforms =
              fromList [ ( "viewProj" , M44F ) , ( "worldMat" , M44F ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec4 vi2;
              smooth out vec4 vo1;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi2;
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              smooth in vec4 vo1;
              out vec4 f0;
              void main() {
                  f0 = vec4
                      ((1.0) - ((vo1).x),(1.0) - ((vo1).y),(1.0) - ((vo1).z),1.0);
              }
              """
          }
      , Program
          { programUniforms =
              fromList [ ( "viewProj" , M44F ) , ( "worldMat" , M44F ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec4 vi2;
              smooth out vec4 vo1;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vec4 ((vi2).x,(vi2).y,(vi2).z,0.5);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              smooth in vec4 vo1;
              out vec4 f0;
              void main() {
                  f0 = vo1;
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3562558025" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3562558025" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3562558025;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3562558025,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_47037129" , FTexture2D )
                , ( "time" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "Tex_47037129" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float time;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = (((vi3) + ((vec2 (0.0,1.0)) * (time))) + ((sin (vec2
                      ((6.28) * (((((vi1).x) + ((vi1).z)) * (9.765625e-4)) + ((0.0) + ((time) * (1.6))))
                      ,(6.28) * ((((vi1).y) * (9.765625e-4)) + ((0.0) + ((time) * (1.6))))))) * (0.25))) * (vec2
                      (4.0,4.0));
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_47037129;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_47037129,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1910997598" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1910997598" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1910997598;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1910997598,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_4077187607" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_4077187607" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_4077187607;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_4077187607,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3416962274" , FTexture2D )
                , ( "time" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3416962274" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float time;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = (((vi3) + ((vec2 (0.0,1.0)) * (time))) + ((sin (vec2
                      ((6.28) * (((((vi1).x) + ((vi1).z)) * (9.765625e-4)) + ((0.0) + ((time) * (5.6))))
                      ,(6.28) * ((((vi1).y) * (9.765625e-4)) + ((0.0) + ((time) * (5.6))))))) * (0.25))) * (vec2
                      (1.5,1.5));
                  vo2 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3416962274;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3416962274,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_4288602201" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_4288602201" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_4288602201;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_4288602201,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3202786139" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3202786139" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3202786139;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3202786139,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_4255130505" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_4255130505" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_4255130505;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_4255130505,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_564811775" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "Tex_564811775" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_564811775;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_564811775,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2073154888" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2073154888" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2073154888;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2073154888,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2099456856" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2099456856" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2099456856;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2099456856,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1581337759" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1581337759" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1581337759;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1581337759,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1062467595" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1062467595" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1062467595;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1062467595,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2024854890" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2024854890" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2024854890;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2024854890,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1284708166" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1284708166" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1284708166;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1284708166,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2432583247" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2432583247" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2432583247;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2432583247,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1002517541" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1002517541" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1002517541;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1002517541,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2639119078" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2639119078" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2639119078;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2639119078,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3479185666" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3479185666" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3479185666;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3479185666,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3448884269" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3448884269" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3448884269;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3448884269,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1201212243" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1201212243" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1201212243;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1201212243,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3389727963" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3389727963" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3389727963;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3389727963,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3836020895" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3836020895" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3836020895;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3836020895,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_209322640" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "Tex_209322640" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_209322640;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_209322640,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2893650486" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2893650486" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2893650486;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2893650486,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3814342582" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3814342582" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3814342582;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3814342582,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_4189195777" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_4189195777" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_4189195777;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_4189195777,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2239853403" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2239853403" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2239853403;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2239853403,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2367525081" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2367525081" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2367525081;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2367525081,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2523116863" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2523116863" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2523116863;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2523116863,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2512757607" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2512757607" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2512757607;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2512757607,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_4289279309" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_4289279309" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_4289279309;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_4289279309,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2525124732" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2525124732" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2525124732;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2525124732,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3071107621" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3071107621" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3071107621;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3071107621,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3921745736" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3921745736" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3921745736;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3921745736,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3647563961" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3647563961" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3647563961;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3647563961,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3593923076" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3593923076" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3593923076;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3593923076,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1435187472" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1435187472" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1435187472;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1435187472,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1318715778" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1318715778" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1318715778;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1318715778,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_442868841" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "Tex_442868841" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_442868841;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_442868841,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2289735512" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2289735512" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2289735512;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2289735512,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3939430064" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3939430064" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3939430064;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3939430064,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3012001075" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3012001075" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3012001075;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3012001075,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3768122504" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3768122504" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3768122504;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3768122504,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2634868983" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2634868983" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2634868983;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2634868983,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3269743316" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3269743316" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3269743316;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3269743316,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3617993418" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3617993418" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3617993418;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3617993418,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1243894392" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1243894392" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1243894392;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1243894392,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2966885788" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2966885788" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2966885788;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2966885788,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_1250438154" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_1250438154" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_1250438154;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_1250438154,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_2490648334" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_2490648334" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_2490648334;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_2490648334,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures = fromList [ ( "LightMap" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi4;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D LightMap;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (LightMap,vo1));
              }
              """
          }
      , Program
          { programUniforms =
              fromList
                [ ( "Tex_3694494180" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "normal" , ty = V3F } )
                , ( "vi3" , Parameter { name = "diffuseUV" , ty = V2F } )
                , ( "vi4" , Parameter { name = "lightmapUV" , ty = V2F } )
                , ( "vi5" , Parameter { name = "color" , ty = V4F } )
                ]
          , programInTextures =
              fromList [ ( "Tex_3694494180" , FTexture2D ) ]
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform float identityLight;
              uniform mat4 viewProj;
              uniform mat4 worldMat;
              in vec3 vi1;
              in vec3 vi2;
              in vec2 vi3;
              in vec2 vi4;
              in vec4 vi5;
              smooth out vec2 vo1;
              smooth out vec4 vo2;
              vec4 snoc(vec3 z0,float z1) {
                  return vec4 ((z0).x,(z0).y,(z0).z,z1);
              }
              void main() {
                  gl_Position = (viewProj) * ((worldMat) * (snoc (vi1,1.0)));
                  vo1 = vi3;
                  vo2 = vec4 (identityLight,identityLight,identityLight,1.0);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform sampler2D Tex_3694494180;
              smooth in vec2 vo1;
              smooth in vec4 vo2;
              out vec4 f0;
              void main() {
                  f0 = (vo2) * (texture2D (Tex_3694494180,vo1));
              }
              """
          }
      ]
  , slots =
      [ Slot
          { slotName = "missing shader"
          , slotStreams =
              fromList [ ( "color" , V4F ) , ( "position" , V3F ) ]
          , slotUniforms =
              fromList [ ( "viewProj" , M44F ) , ( "worldMat" , M44F ) ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 0 , 1 ]
          }
      , Slot
          { slotName = "textures/gothic_block/demon_block15fx"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3562558025" , FTexture2D )
                , ( "Tex_47037129" , FTexture2D )
                , ( "time" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 2 , 3 , 4 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/pitted_rust2_trans"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1910997598" , FTexture2D )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 5 , 6 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skullarch_b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3416962274" , FTexture2D )
                , ( "Tex_4077187607" , FTexture2D )
                , ( "time" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 7 , 8 , 9 ]
          }
      , Slot
          { slotName = "textures/gothic_block/blocks11b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_4288602201" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 10 , 11 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard09_l2"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3202786139" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 12 , 13 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_e"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_4255130505" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 14 , 15 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/supportborder_blue_b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_564811775" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 16 , 17 ]
          }
      , Slot
          { slotName = "textures/gothic_door/km_arena1archfinalc_mid"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2073154888" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 18 , 19 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/pitted_rust2"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2099456856" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 20 , 21 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/metalbridge06"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1581337759" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 22 , 23 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/metaldemonkillblock"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1062467595" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 24 , 25 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skullarch_c"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2024854890" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 26 , 27 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_a"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1284708166" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 28 , 29 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/iron01_e"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2432583247" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 30 , 31 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard04"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1002517541" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 32 , 33 ]
          }
      , Slot
          { slotName = "textures/gothic_block/blocks18b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2639119078" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 34 , 35 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/km_arena1tower4"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3479185666" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 36 , 37 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skullarch_a"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3448884269" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 38 , 39 ]
          }
      , Slot
          { slotName = "textures/gothic_door/km_arena1archfinald_bot"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1201212243" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 40 , 41 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/pitted_rust3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3389727963" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 42 , 43 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/xstairtop4"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3836020895" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 44 , 45 ]
          }
      , Slot
          { slotName = "textures/gothic_block/killblock_i"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_209322640" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 46 , 47 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/metalsupsolid"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2893650486" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 48 , 49 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/blocks17floor2"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3814342582" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 50 , 51 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_c"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_4189195777" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 52 , 53 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/skull4"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2239853403" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 54 , 55 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard09_e"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2367525081" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 56 , 57 ]
          }
      , Slot
          { slotName = "textures/gothic_block/blocks15"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2523116863" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 58 , 59 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard09_o3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2512757607" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 60 , 61 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_f"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_4289279309" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 62 , 63 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/supportborder_blue_c"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2525124732" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 64 , 65 ]
          }
      , Slot
          { slotName = "textures/gothic_door/km_arena1archfinalc_top"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3071107621" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 66 , 67 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/metalbridge06broke"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3921745736" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 68 , 69 ]
          }
      , Slot
          { slotName = "textures/gothic_block/killblock"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3647563961" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 70 , 71 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/metalsupport4b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3593923076" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 72 , 73 ]
          }
      , Slot
          { slotName = "textures/gothic_door/xian_tourneyarch_inside2"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1435187472" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 74 , 75 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1318715778" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 76 , 77 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/iron01_ntech3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_442868841" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 78 , 79 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard09_c3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2289735512" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 80 , 81 ]
          }
      , Slot
          { slotName = "textures/gothic_block/blocks18c_3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3939430064" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 82 , 83 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/km_arena1tower4_a"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3012001075" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 84 , 85 ]
          }
      , Slot
          { slotName = "textures/gothic_door/km_arena1archfinald_mid"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3768122504" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 86 , 87 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/skullsvertgray02b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2634868983" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 88 , 89 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/xstepborder3"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3269743316" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 90 , 91 ]
          }
      , Slot
          { slotName = "textures/gothic_block/killblock_i4"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3617993418" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 92 , 93 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/pitted_rust"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1243894392" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 94 , 95 ]
          }
      , Slot
          { slotName = "textures/gothic_floor/largerblock3b"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2966885788" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 96 , 97 ]
          }
      , Slot
          { slotName = "textures/gothic_door/skull_door_d"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_1250438154" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 98 , 99 ]
          }
      , Slot
          { slotName = "textures/gothic_wall/slateroofc"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_2490648334" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 100 , 101 ]
          }
      , Slot
          { slotName = "textures/gothic_trim/baseboard09_e2"
          , slotStreams =
              fromList
                [ ( "color" , V4F )
                , ( "diffuseUV" , V2F )
                , ( "lightmapUV" , V2F )
                , ( "normal" , V3F )
                , ( "position" , V3F )
                ]
          , slotUniforms =
              fromList
                [ ( "LightMap" , FTexture2D )
                , ( "Tex_3694494180" , FTexture2D )
                , ( "identityLight" , Float )
                , ( "viewProj" , M44F )
                , ( "worldMat" , M44F )
                ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 102 , 103 ]
          }
      ]
  , streams = []
  , commands =
      [ SetRenderTarget 0
      , ClearRenderTarget
          [ ClearImage { imageSemantic = Depth , clearValue = VFloat 1000.0 }
          , ClearImage
              { imageSemantic = Color , clearValue = VV4F (V4 0.0 0.0 0.0 0.0) }
          ]
      , SetProgram 103
      , SetSamplerUniform "Tex_3694494180" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 50
      , SetProgram 102
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 50
      , SetProgram 101
      , SetSamplerUniform "Tex_2490648334" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 49
      , SetProgram 100
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 49
      , SetProgram 99
      , SetSamplerUniform "Tex_1250438154" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 48
      , SetProgram 98
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 48
      , SetProgram 97
      , SetSamplerUniform "Tex_2966885788" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 47
      , SetProgram 96
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 47
      , SetProgram 95
      , SetSamplerUniform "Tex_1243894392" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 46
      , SetProgram 94
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 46
      , SetProgram 93
      , SetSamplerUniform "Tex_3617993418" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 45
      , SetProgram 92
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 45
      , SetProgram 91
      , SetSamplerUniform "Tex_3269743316" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 44
      , SetProgram 90
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 44
      , SetProgram 89
      , SetSamplerUniform "Tex_2634868983" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 43
      , SetProgram 88
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 43
      , SetProgram 87
      , SetSamplerUniform "Tex_3768122504" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 42
      , SetProgram 86
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 42
      , SetProgram 85
      , SetSamplerUniform "Tex_3012001075" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 41
      , SetProgram 84
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 41
      , SetProgram 83
      , SetSamplerUniform "Tex_3939430064" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 40
      , SetProgram 82
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 40
      , SetProgram 81
      , SetSamplerUniform "Tex_2289735512" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 39
      , SetProgram 80
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 39
      , SetProgram 79
      , SetSamplerUniform "Tex_442868841" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 38
      , SetProgram 78
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 38
      , SetProgram 77
      , SetSamplerUniform "Tex_1318715778" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 37
      , SetProgram 76
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 37
      , SetProgram 75
      , SetSamplerUniform "Tex_1435187472" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 36
      , SetProgram 74
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 36
      , SetProgram 73
      , SetSamplerUniform "Tex_3593923076" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 35
      , SetProgram 72
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 35
      , SetProgram 71
      , SetSamplerUniform "Tex_3647563961" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 34
      , SetProgram 70
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 34
      , SetProgram 69
      , SetSamplerUniform "Tex_3921745736" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 33
      , SetProgram 68
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 33
      , SetProgram 67
      , SetSamplerUniform "Tex_3071107621" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 32
      , SetProgram 66
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 32
      , SetProgram 65
      , SetSamplerUniform "Tex_2525124732" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 31
      , SetProgram 64
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 31
      , SetProgram 63
      , SetSamplerUniform "Tex_4289279309" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 30
      , SetProgram 62
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 30
      , SetProgram 61
      , SetSamplerUniform "Tex_2512757607" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 29
      , SetProgram 60
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 29
      , SetProgram 59
      , SetSamplerUniform "Tex_2523116863" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 28
      , SetProgram 58
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 28
      , SetProgram 57
      , SetSamplerUniform "Tex_2367525081" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 27
      , SetProgram 56
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 27
      , SetProgram 55
      , SetSamplerUniform "Tex_2239853403" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 26
      , SetProgram 54
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 26
      , SetProgram 53
      , SetSamplerUniform "Tex_4189195777" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 25
      , SetProgram 52
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 25
      , SetProgram 51
      , SetSamplerUniform "Tex_3814342582" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 24
      , SetProgram 50
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 24
      , SetProgram 49
      , SetSamplerUniform "Tex_2893650486" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 23
      , SetProgram 48
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 23
      , SetProgram 47
      , SetSamplerUniform "Tex_209322640" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 22
      , SetProgram 46
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 22
      , SetProgram 45
      , SetSamplerUniform "Tex_3836020895" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 21
      , SetProgram 44
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 21
      , SetProgram 43
      , SetSamplerUniform "Tex_3389727963" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 20
      , SetProgram 42
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 20
      , SetProgram 41
      , SetSamplerUniform "Tex_1201212243" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 19
      , SetProgram 40
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 19
      , SetProgram 39
      , SetSamplerUniform "Tex_3448884269" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 18
      , SetProgram 38
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 18
      , SetProgram 37
      , SetSamplerUniform "Tex_3479185666" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 17
      , SetProgram 36
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 17
      , SetProgram 35
      , SetSamplerUniform "Tex_2639119078" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 16
      , SetProgram 34
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 16
      , SetProgram 33
      , SetSamplerUniform "Tex_1002517541" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 15
      , SetProgram 32
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 15
      , SetProgram 31
      , SetSamplerUniform "Tex_2432583247" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 14
      , SetProgram 30
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 14
      , SetProgram 29
      , SetSamplerUniform "Tex_1284708166" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 13
      , SetProgram 28
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 13
      , SetProgram 27
      , SetSamplerUniform "Tex_2024854890" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 12
      , SetProgram 26
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 12
      , SetProgram 25
      , SetSamplerUniform "Tex_1062467595" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 11
      , SetProgram 24
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 11
      , SetProgram 23
      , SetSamplerUniform "Tex_1581337759" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 10
      , SetProgram 22
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 10
      , SetProgram 21
      , SetSamplerUniform "Tex_2099456856" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 9
      , SetProgram 20
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 9
      , SetProgram 19
      , SetSamplerUniform "Tex_2073154888" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 8
      , SetProgram 18
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 8
      , SetProgram 17
      , SetSamplerUniform "Tex_564811775" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 7
      , SetProgram 16
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 7
      , SetProgram 15
      , SetSamplerUniform "Tex_4255130505" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 6
      , SetProgram 14
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 6
      , SetProgram 13
      , SetSamplerUniform "Tex_3202786139" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 5
      , SetProgram 12
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 5
      , SetProgram 11
      , SetSamplerUniform "Tex_4288602201" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 4
      , SetProgram 10
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 4
      , SetProgram 9
      , SetSamplerUniform "Tex_3416962274" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 3
      , SetProgram 8
      , SetSamplerUniform "Tex_4077187607" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = SrcAlpha
                      , colorFDst = OneMinusSrcAlpha
                      , alphaFSrc = SrcAlpha
                      , alphaFDst = OneMinusSrcAlpha
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 3
      , SetProgram 7
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 3
      , SetProgram 6
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 2
      , SetProgram 5
      , SetSamplerUniform "Tex_1910997598" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = Zero
                      , alphaFSrc = DstColor
                      , alphaFDst = Zero
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 2
      , SetProgram 4
      , SetSamplerUniform "Tex_47037129" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 1
      , SetProgram 3
      , SetSamplerUniform "Tex_3562558025" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = SrcAlpha
                      , colorFDst = OneMinusSrcAlpha
                      , alphaFSrc = SrcAlpha
                      , alphaFDst = OneMinusSrcAlpha
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 1
      , SetProgram 2
      , SetSamplerUniform "LightMap" 0
      , SetRasterContext
          (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = FuncAdd
                      , colorFSrc = DstColor
                      , colorFDst = OneMinusDstAlpha
                      , alphaFSrc = DstColor
                      , alphaFDst = OneMinusDstAlpha
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 1
      , SetProgram 1
      , SetRasterContext
          (TriangleCtx CullNone PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Less False
                , ColorOp
                    Blend
                      { colorEqSrc = FuncAdd
                      , alphaEqSrc = Min
                      , colorFSrc = One
                      , colorFDst = One
                      , alphaFSrc = One
                      , alphaFDst = One
                      , color = V4 1.0 1.0 1.0 1.0
                      }
                    (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 0
      , SetProgram 0
      , SetRasterContext
          (TriangleCtx CullNone (PolygonLine 1.0) NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 0
      ]
  }