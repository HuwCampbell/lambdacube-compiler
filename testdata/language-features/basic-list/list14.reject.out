type error: can not unify
[32m'List 'Char[m
with
[32m'Tuple0[m

in testdata/language-features/basic-list/list14.reject.lc:1:17:
value = 'h':'i':()
                ^^

------------ trace
infer:  [47mlabelend (Cons 'h' (Cons 'i' Tuple0))[49m[K
infer:  labEnd ([47mCons 'h' (Cons 'i' Tuple0)[49m)[K
infer:  labEnd ([47mCons 'h'[49m (Cons 'i' Tuple0))[K
infer:  labEnd ([47mCons[49m 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([47m[32mCons[39m[49m 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([47m[32mCons[39m[49m {_ : _:'Type} 'h' (Cons 'i' Tuple0))[K
check:  labEnd ([32mCons[39m {[47m(_ : _:'Type) :: [32mType[39m[49m} 'h' (Cons 'i' Tuple0))[K
infer:  labEnd ([32mCons[39m {([47m_ : _:'Type[49m) : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
infer:  labEnd ([32mCons[39m {\([34ma[39m : [47m_:'Type[49m)->a : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
infer:  labEnd ([32mCons[39m {\([34mb[39m : (\[34ma[39m:[47m'Type[49m -> a))->b : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\([34mb[39m : (\[34ma[39m:[47m[32mType[39m[49m -> a))->b : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
infer:  labEnd ([32mCons[39m {\([34mb[39m : \[34ma[39m->[47ma[49m)->b : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\([34mb[39m : \[34ma[39m->[47m[32ma[39m[49m)->b : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {(\[34ma[39m [34mb[39m:[47m[32ma[39m[49m -> b) : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
infer:  labEnd ([32mCons[39m {(\[34ma[39m [34mb[39m:[32ma[39m -> [47mb[49m) : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {(\[34ma[39m [34mb[39m:[32ma[39m -> [47m[32mb[39m[49m) : [32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m -> [47m[32mb[39m[49m:[32mType[39m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m -> \([34mc[39m : [32mType~a[39m)->[47m[32mb[39m[49m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m [34ma[39m:=[32mType[39m -> [47m[32mb[39m[49m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\[34ma[39m [34ma[39m:=[32mType[39m -> \[34mb[39m->[47m[32mb[39m[49m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ([32mCons[39m {\[34ma[39m->[47m[32ma[39m[49m} 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m -> [32mCons[39m {[47m[32ma[39m[49m}) 'h' (Cons 'i' Tuple0))[K
focus:  labEnd (\[34ma[39m->[47m[32mCons[39m[49m 'h' (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m -> [47m[32mCons[39m[49m 'h') (Cons 'i' Tuple0))[K
check:  labEnd ((\[34ma[39m -> [32mCons[39m [47m'h'::[32ma[39m[49m) (Cons 'i' Tuple0))[K
infer:  labEnd ((\[34ma[39m -> [32mCons[39m [47m'h'[49m:[32ma[39m) (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m -> [32mCons[39m [47m[32m'h'[39m[49m:[32ma[39m) (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m -> [32mCons[39m \([34mb[39m : [32ma~'Char[39m)->[47m[32m'h'[39m[49m) (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m -> [32mCons[39m (\[34ma[39m:=[32m'Char[39m -> [47m[32m'h'[39m[49m)) (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m [34ma[39m:=[32m'Char[39m -> [32mCons[39m [47m[32m'h'[39m[49m) (Cons 'i' Tuple0))[K
focus:  labEnd ((\[34ma[39m [34ma[39m:=[32m'Char[39m -> [47m[32mCons 'h'[39m[49m) (Cons 'i' Tuple0))[K
focus:  labEnd ([47m[32mCons 'h'[39m[49m (Cons 'i' Tuple0))[K
check:  labEnd ([32mCons 'h'[39m ([47mCons 'i' Tuple0 :: [32m'List 'Char[39m[49m))[K
infer:  labEnd ([32mCons 'h'[39m ([47mCons 'i'[49m Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([47mCons[49m 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([47m[32mCons[39m[49m 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([47m[32mCons[39m[49m {_ : _:'Type} 'i' Tuple0 : [32m'List 'Char[39m))[K
check:  labEnd ([32mCons 'h'[39m ([32mCons[39m {[47m(_ : _:'Type) :: [32mType[39m[49m} 'i' Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons[39m {([47m_ : _:'Type[49m) : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\([34ma[39m : [47m_:'Type[49m)->a : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\([34mb[39m : (\[34ma[39m:[47m'Type[49m -> a))->b : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\([34mb[39m : (\[34ma[39m:[47m[32mType[39m[49m -> a))->b : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\([34mb[39m : \[34ma[39m->[47ma[49m)->b : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\([34mb[39m : \[34ma[39m->[47m[32ma[39m[49m)->b : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {(\[34ma[39m [34mb[39m:[47m[32ma[39m[49m -> b) : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons[39m {(\[34ma[39m [34mb[39m:[32ma[39m -> [47mb[49m) : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {(\[34ma[39m [34mb[39m:[32ma[39m -> [47m[32mb[39m[49m) : [32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m -> [47m[32mb[39m[49m:[32mType[39m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m -> \([34mc[39m : [32mType~a[39m)->[47m[32mb[39m[49m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\[34ma[39m [34mb[39m:[32ma[39m [34ma[39m:=[32mType[39m -> [47m[32mb[39m[49m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\[34ma[39m [34ma[39m:=[32mType[39m -> \[34mb[39m->[47m[32mb[39m[49m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons[39m {\[34ma[39m->[47m[32ma[39m[49m} 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m {[47m[32ma[39m[49m}) 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m (\[34ma[39m->[47m[32mCons[39m[49m 'i' Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [47m[32mCons[39m[49m 'i') Tuple0 : [32m'List 'Char[39m))[K
check:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m [47m'i'::[32ma[39m[49m) Tuple0 : [32m'List 'Char[39m))[K
infer:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m [47m'i'[49m:[32ma[39m) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m [47m[32m'i'[39m[49m:[32ma[39m) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m \([34mb[39m : [32ma~'Char[39m)->[47m[32m'i'[39m[49m) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m -> [32mCons[39m (\[34ma[39m:=[32m'Char[39m -> [47m[32m'i'[39m[49m)) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m [34ma[39m:=[32m'Char[39m -> [32mCons[39m [47m[32m'i'[39m[49m) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m [34ma[39m:=[32m'Char[39m -> [47m[32mCons 'i'[39m[49m) Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ([47m[32mCons 'i'[39m[49m Tuple0 : [32m'List 'Char[39m))[K
focus:  labEnd ([32mCons 'h'[39m ((\[34ma[39m:[32m'Unit[39m -> [47m[32mCons 'i'[39m[49m) Tuple0))[K
focus:  labEnd ([32mCons 'h'[39m ([47m[32mCons 'i'[39m[49m Tuple0))[K
check:  labEnd ([32mCons 'h'[39m ([32mCons 'i'[39m ([47mTuple0 :: [32m'List 'Char[39m[49m)))[K
infer:  labEnd ([32mCons 'h'[39m ([32mCons 'i'[39m ([47mTuple0[49m : [32m'List 'Char[39m)))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons 'i'[39m ([47m[32mTuple0[39m[49m : [32m'List 'Char[39m)))[K
focus:  labEnd ([32mCons 'h'[39m ([32mCons 'i'[39m \([34ma[39m : [32m'Empty "can not unify\n\ESC[32m'List 'Char\ESC[m\nwith\n\ESC[32m'Tuple0\ESC[m\n"[39m)->[47m[32mTuple0[39m[49m))[K
!type error: can not unify
[32m'List 'Char[m
with
[32m'Tuple0[m

in testdata/language-features/basic-list/list14.reject.lc:1:17

------------ tooltips
testdata/language-features/basic-list/list14.reject.lc 1:9-1:12  Char
testdata/language-features/basic-list/list14.reject.lc 1:9-1:13  List Char -> List Char
testdata/language-features/basic-list/list14.reject.lc 1:12-1:13  {a} -> a -> List a -> List a
testdata/language-features/basic-list/list14.reject.lc 1:13-1:16  Char
testdata/language-features/basic-list/list14.reject.lc 1:13-1:17  List Char -> List Char
testdata/language-features/basic-list/list14.reject.lc 1:16-1:17  {a} -> a -> List a -> List a
testdata/language-features/basic-list/list14.reject.lc 1:17-1:19  Tuple0
