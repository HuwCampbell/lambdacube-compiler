------------ desugared source code
f
  = \(a :: _) (b :: _) (c :: _) -> 'BoolCase
    \_ -> _ :: _
    ('BoolCase
      \_ -> _ :: _
      ('BoolCase \_ -> _ :: _ (_rhs undefined) (_rhs (fromInt 1)) c)
      (_rhs (fromInt 2))
      a)
    ('BoolCase
      \_ -> _ :: _
      (_rhs (fromInt 0))
      ('BoolCase \_ -> _ :: _ (_rhs (fromInt 1)) (_rhs undefined) a)
      c)
    b
main is not found
------------ trace
f :: forall a . Num a => Bool -> Bool -> Bool -> a
------------ tooltips
testdata/language-features/pattern/uncovered.lc 4:1-4:2
    forall a . Num a => Bool -> Bool -> Bool -> a
testdata/language-features/pattern/uncovered.lc 4:18-4:19
    _b
testdata/language-features/pattern/uncovered.lc 4:18-5:19
    Bool -> _c | _c
testdata/language-features/pattern/uncovered.lc 4:18-6:19
    Bool -> _c
testdata/language-features/pattern/uncovered.lc 5:18-5:19
    _b | _b | _b | _c
testdata/language-features/pattern/uncovered.lc 5:18-6:19
    Bool -> _c | _b
testdata/language-features/pattern/uncovered.lc 6:18-6:19
    _b
------------ warnings
Uncovered pattern(s) at testdata/language-features/pattern/uncovered.lc:4:1:
f _ True False = 0
f False _ True = 1
f True False _ = 2
Missing case(s):
  False False False 
  True True True 