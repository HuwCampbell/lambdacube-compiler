Pipeline
  { info = "generated by lambdcube-compiler 0.5.0.0"
  , backend = OpenGL33
  , textures = []
  , samplers = []
  , targets =
      [ RenderTarget
          { renderTargets =
              [ TargetItem
                  { targetSemantic = Depth , targetRef = Just (Framebuffer Depth) }
              , TargetItem
                  { targetSemantic = Color , targetRef = Just (Framebuffer Color) }
              ]
          }
      ]
  , programs =
      [ Program
          { programUniforms = fromList [ ( "Time" , Float ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position4" , ty = V4F } ) ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}
              uniform float Time ;
              in vec4 vi1 ;
              smooth out vec4 vo1 ;
              void main() {
              gl_Position = ((mat4
                  (vec4 (cos ((4.1) + ((((fract ((Time) * (0.2))) * (fract
                        ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                        ((Time) * (0.2)))))) * (6.28318530718)))
                        ,0.0
                        ,(0.0) - (sin ((4.1) + ((((fract ((Time) * (0.2))) * (fract
                        ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                        ((Time) * (0.2)))))) * (6.28318530718))))
                        ,0.0)
                  ,vec4 (0.0,1.0,0.0,0.0)
                  ,vec4 (sin ((4.1) + ((((fract ((Time) * (0.2))) * (fract
                        ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                        ((Time) * (0.2)))))) * (6.28318530718)))
                        ,0.0
                        ,cos ((4.1) + ((((fract ((Time) * (0.2))) * (fract
                        ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                        ((Time) * (0.2)))))) * (6.28318530718)))
                        ,0.0)
                  ,vec4 (0.0,0.0,0.0,1.0))) * ((mat4
                  (vec4 (cos (2.35619449017),sin (2.35619449017),0.0,0.0)
                  ,vec4
                  ((0.0) - (sin (2.35619449017)),cos (2.35619449017),0.0,0.0)
                  ,vec4 (0.0,0.0,1.0,0.0)
                  ,vec4 (0.0,0.0,0.0,1.0))) * (vi1))) * (vec4
                  ((0.2) + ((abs ((0.5) - (((fract ((Time) * (0.2))) * (fract
                  ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                  ((Time) * (0.2)))))))) * (0.6))
                  ,(0.2) + ((abs ((0.5) - (((fract ((Time) * (0.2))) * (fract
                  ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                  ((Time) * (0.2)))))))) * (0.6))
                  ,(0.2) + ((abs ((0.5) - (((fract ((Time) * (0.2))) * (fract
                  ((Time) * (0.2)))) * ((3.0) - ((2.0) * (fract
                  ((Time) * (0.2)))))))) * (0.6))
                  ,1.0));
              vo1 = vi1;
              }
              
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}
              smooth in vec4 vo1 ;
              out vec4 f0 ;
              void main() {
              f0 = (abs ((vo1).x)) > (0.99999) ? vec4
                  (((((((vo1).yz) * (sign
                  ((vo1).x))) * (0.5)) + (0.5)).x) * ((((((vo1).yz) * (sign
                  ((vo1).x))) * (0.5)) + (0.5)).x)
                  ,1.0
                  ,((1.0) - ((((((vo1).yz) * (sign
                  ((vo1).x))) * (0.5)) + (0.5)).x)) * ((1.0) - ((((((vo1).yz) * (sign
                  ((vo1).x))) * (0.5)) + (0.5)).x))
                  ,((((((vo1).yz) * (sign
                  ((vo1).x))) * (0.5)) + (0.5)).y) > (0.75) ? 0.0 : 1.0) : (abs
                  ((vo1).y)) > (0.99999) ? vec4
                  ((dot (((((vo1).zx) * (sign ((vo1).y))) * (0.5)) + (0.5)
                        ,vec2 (-0.5,0.5))) + (0.4)
                  ,1.0
                  ,0.0
                  ,((dot (((((vo1).zx) * (sign ((vo1).y))) * (0.5)) + (0.5)
                         ,vec2 (1.0,-1.0))) > (-0.25)) && ((dot
                  (((((vo1).zx) * (sign ((vo1).y))) * (0.5)) + (0.5)
                  ,vec2 (1.0,-1.0))) < (0.0)) ? 0.0 : 1.0) : (abs
                  ((vo1).z)) > (0.99999) ? vec4
                  (0.0
                  ,1.0
                  ,(dot (((((vo1).xy) * (sign ((vo1).z))) * (0.5)) + (0.5)
                        ,vec2 (0.5,-0.5))) + (0.4)
                  ,((((((vo1).xy) * (sign
                  ((vo1).z))) * (0.5)) + (0.5)).y) > (0.75) ? 0.0 : 1.0) : vec4
                  (0.0,0.0,0.0,1.0);
              }
              
              """
          }
      ]
  , slots =
      [ Slot
          { slotName = "stream4"
          , slotStreams = fromList [ ( "position4" , V4F ) ]
          , slotUniforms = fromList [ ( "Time" , Float ) ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 0 ]
          }
      ]
  , streams = []
  , commands =
      [ SetRenderTarget 0
      , ClearRenderTarget
          [ ClearImage { imageSemantic = Depth , clearValue = VFloat 1.0 }
          , ClearImage
              { imageSemantic = Color , clearValue = VV4F (V4 0.0 0.0 0.5 1.0) }
          ]
      , SetProgram 0
      , SetRasterContext
          (TriangleCtx CullNone PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Less True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 0
      ]
  }