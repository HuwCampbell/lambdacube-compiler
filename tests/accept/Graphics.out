Pipeline {backend = OpenGL33, textures = [], samplers = [], targets = [RenderTarget {renderTargets = [TargetItem {targetSemantic = Depth, targetRef = Just (Framebuffer Depth)},TargetItem {targetSemantic = Color, targetRef = Just (Framebuffer Color)}]}], programs = [Program {programUniforms = fromList [("viewProj",M44F),("worldMat",M44F)], programStreams = fromList [("x1",Parameter {name = "position", ty = V3F}),("y1",Parameter {name = "color", ty = V4F})], programInTextures = fromList [], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform mat4 viewProj ;\nuniform mat4 worldMat ;\nin vec3 x1 ;\nin vec4 y1 ;\nsmooth out vec4 v0 ;\nvoid main() {\nv0 = y1;\ngl_Position = ( viewProj ) * ( ( worldMat ) * ( vec4 ( ( x1 ).x,( x1 ).y,( x1 ).z,1.0 ) ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nsmooth in vec4 v0 ;\nout vec4 f0 ;\nvoid main() {\nf0 = vec4 ( ( 1.0 ) - ( ( v0 ).x ),( 1.0 ) - ( ( v0 ).y ),( 1.0 ) - ( ( v0 ).z ),1.0 );\n}\n"},Program {programUniforms = fromList [("viewProj",M44F),("worldMat",M44F)], programStreams = fromList [("l4",Parameter {name = "position", ty = V3F}),("m4",Parameter {name = "color", ty = V4F})], programInTextures = fromList [], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform mat4 viewProj ;\nuniform mat4 worldMat ;\nin vec3 l4 ;\nin vec4 m4 ;\nsmooth out vec4 v0 ;\nvoid main() {\nv0 = vec4 ( ( m4 ).x,( m4 ).y,( m4 ).z,0.5 );\ngl_Position = ( viewProj ) * ( ( worldMat ) * ( vec4 ( ( l4 ).x,( l4 ).y,( l4 ).z,1.0 ) ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nsmooth in vec4 v0 ;\nout vec4 f0 ;\nvoid main() {\nf0 = v0;\n}\n"},Program {programUniforms = fromList [("identityLight",Float),("models/mapobjects/gratelamp/gratetorch2b.tga",FTexture2D),("viewProj",M44F),("worldMat",M44F)], programStreams = fromList [("o9",Parameter {name = "position", ty = V3F}),("p9",Parameter {name = "normal", ty = V3F}),("q9",Parameter {name = "diffuseUV", ty = V2F}),("r9",Parameter {name = "lightmapUV", ty = V2F}),("s9",Parameter {name = "color", ty = V4F})], programInTextures = fromList [("models/mapobjects/gratelamp/gratetorch2b.tga",FTexture2D)], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform float identityLight ;\nuniform mat4 viewProj ;\nuniform mat4 worldMat ;\nin vec3 o9 ;\nin vec3 p9 ;\nin vec2 q9 ;\nin vec2 r9 ;\nin vec4 s9 ;\nsmooth out vec2 v0 ;\nsmooth out vec4 v1 ;\nvoid main() {\nv0 = q9;\nv1 = vec4 ( ( ( vec3 ( ( s9 ).x,( s9 ).y,( s9 ).z ) ) * ( identityLight ) ).x,( ( vec3 ( ( s9 ).x,( s9 ).y,( s9 ).z ) ) * ( identityLight ) ).y,( ( vec3 ( ( s9 ).x,( s9 ).y,( s9 ).z ) ) * ( identityLight ) ).z,( s9 ).w );\ngl_Position = ( viewProj ) * ( ( worldMat ) * ( vec4 ( ( o9 ).x,( o9 ).y,( o9 ).z,1.0 ) ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform sampler2D models/mapobjects/gratelamp/gratetorch2b.tga ;\nsmooth in vec2 v0 ;\nsmooth in vec4 v1 ;\nout vec4 f0 ;\nvoid main() {\nf0 = ( v1 ) * ( texture2D ( models/mapobjects/gratelamp/gratetorch2b.tga,v0 ) );\n}\n"},Program {programUniforms = fromList [("LightMap",FTexture2D),("identityLight",Float),("viewProj",M44F),("worldMat",M44F)], programStreams = fromList [("a15",Parameter {name = "color", ty = V4F}),("w14",Parameter {name = "position", ty = V3F}),("x14",Parameter {name = "normal", ty = V3F}),("y14",Parameter {name = "diffuseUV", ty = V2F}),("z14",Parameter {name = "lightmapUV", ty = V2F})], programInTextures = fromList [("LightMap",FTexture2D)], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform float identityLight ;\nuniform mat4 viewProj ;\nuniform mat4 worldMat ;\nin vec3 w14 ;\nin vec3 x14 ;\nin vec2 y14 ;\nin vec2 z14 ;\nin vec4 a15 ;\nsmooth out vec2 v0 ;\nsmooth out vec4 v1 ;\nvoid main() {\nv0 = z14;\nv1 = vec4 ( identityLight,identityLight,identityLight,1.0 );\ngl_Position = ( viewProj ) * ( ( worldMat ) * ( vec4 ( ( w14 ).x,( w14 ).y,( w14 ).z,1.0 ) ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform sampler2D LightMap ;\nsmooth in vec2 v0 ;\nsmooth in vec4 v1 ;\nout vec4 f0 ;\nvoid main() {\nf0 = ( v1 ) * ( texture2D ( LightMap,v0 ) );\n}\n"},Program {programUniforms = fromList [("identityLight",Float),("models/mapobjects/gratelamp/gratetorch2",FTexture2D),("viewProj",M44F),("worldMat",M44F)], programStreams = fromList [("n18",Parameter {name = "position", ty = V3F}),("o18",Parameter {name = "normal", ty = V3F}),("p18",Parameter {name = "diffuseUV", ty = V2F}),("q18",Parameter {name = "lightmapUV", ty = V2F}),("r18",Parameter {name = "color", ty = V4F})], programInTextures = fromList [("models/mapobjects/gratelamp/gratetorch2",FTexture2D)], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform float identityLight ;\nuniform mat4 viewProj ;\nuniform mat4 worldMat ;\nin vec3 n18 ;\nin vec3 o18 ;\nin vec2 p18 ;\nin vec2 q18 ;\nin vec4 r18 ;\nsmooth out vec2 v0 ;\nsmooth out vec4 v1 ;\nvoid main() {\nv0 = p18;\nv1 = vec4 ( identityLight,identityLight,identityLight,1.0 );\ngl_Position = ( viewProj ) * ( ( worldMat ) * ( vec4 ( ( n18 ).x,( n18 ).y,( n18 ).z,1.0 ) ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform sampler2D models/mapobjects/gratelamp/gratetorch2 ;\nsmooth in vec2 v0 ;\nsmooth in vec4 v1 ;\nout vec4 f0 ;\nvoid main() {\nf0 = ( v1 ) * ( texture2D ( models/mapobjects/gratelamp/gratetorch2,v0 ) );\n}\n"}], slots = [Slot {slotName = "missing shader", slotStreams = fromList [("color",V4F),("position",V3F)], slotUniforms = fromList [("viewProj",M44F),("worldMat",M44F)], slotPrimitive = Triangles, slotPrograms = [0,1]},Slot {slotName = "models/mapobjects/gratelamp/gratetorch2b", slotStreams = fromList [("color",V4F),("diffuseUV",V2F),("lightmapUV",V2F),("normal",V3F),("position",V3F)], slotUniforms = fromList [("identityLight",Float),("models/mapobjects/gratelamp/gratetorch2b.tga",FTexture2D),("viewProj",M44F),("worldMat",M44F)], slotPrimitive = Triangles, slotPrograms = [2]},Slot {slotName = "models/mapobjects/gratelamp/gratetorch2", slotStreams = fromList [("color",V4F),("diffuseUV",V2F),("lightmapUV",V2F),("normal",V3F),("position",V3F)], slotUniforms = fromList [("LightMap",FTexture2D),("identityLight",Float),("models/mapobjects/gratelamp/gratetorch2",FTexture2D),("viewProj",M44F),("worldMat",M44F)], slotPrimitive = Triangles, slotPrograms = [3,4]}], streams = [], commands = [SetRenderTarget 0,ClearRenderTarget [ClearImage {imageSemantic = Depth, clearValue = VFloat 1000.0},ClearImage {imageSemantic = Color, clearValue = VV4F (V4 0.0 0.0 0.0 0.0)}],SetProgram 4,SetRasterContext (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Lequal True,ColorOp NoBlending (VV4B (V4 True True True True))]}),RenderSlot 2,SetProgram 3,SetRasterContext (TriangleCtx (CullFront CCW) PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Lequal True,ColorOp (Blend {colorEqSrc = FuncAdd, alphaEqSrc = FuncAdd, colorFSrc = DstColor, colorFDst = Zero, alphaFSrc = DstColor, alphaFDst = Zero, color = V4 0.0 0.0 0.0 0.0}) (VV4B (V4 True True True True))]}),RenderSlot 2,SetProgram 2,SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Lequal True,ColorOp NoBlending (VV4B (V4 True True True True))]}),RenderSlot 1,SetProgram 1,SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Less False,ColorOp (Blend {colorEqSrc = FuncAdd, alphaEqSrc = Min, colorFSrc = One, colorFDst = One, alphaFSrc = One, alphaFDst = One, color = V4 1.0 1.0 1.0 1.0}) (VV4B (V4 True True True True))]}),RenderSlot 0,SetProgram 0,SetRasterContext (TriangleCtx CullNone (PolygonLine 1.0) NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Lequal True,ColorOp NoBlending (VV4B (V4 True True True True))]}),RenderSlot 0]}