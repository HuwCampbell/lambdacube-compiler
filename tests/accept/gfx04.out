Pipeline {backend = OpenGL33, textures = [], samplers = [], targets = [RenderTarget {renderTargets = [(Depth,Just (Framebuffer Depth)),(Color,Just (Framebuffer Color))]}], programs = [Program {programUniforms = fromList [("MVP",M44F)], programStreams = fromList [("t00022",("position",V3F)),("t00023",("normal",V3F))], programInTextures = fromList [], programOutput = [("f0",V4F)], vertexShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nuniform mat4 MVP ;\nin vec3 t00022 ;\nin vec3 t00023 ;\nsmooth out vec4 v0 ;\nflat out vec4 v1 ;\nvoid main() {\nv0 = vec4 ( ( t00023 ).x,( t00023 ).y,( t00023 ).z,1.0 );\nv1 = vec4 ( ( t00022 ).x,( t00022 ).y,( t00022 ).z,1.0 );\ngl_Position = ( MVP ) * ( vec4 ( ( t00022 ).x,( t00022 ).y,( t00022 ).z,1.0 ) );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 330 core\nvec4 texture2D(sampler2D s, vec2 uv){return texture(s,uv);}\nsmooth in vec4 v0 ;\nflat in vec4 v1 ;\nout vec4 f0 ;\nvoid main() {\nf0 = ( v0 ) * ( vec4 ( 1.0,1.4,1.0,0.6 ) );\n}\n"}], slots = [Slot {slotName = "stream", slotStreams = fromList [("normal",V3F),("position",V3F)], slotUniforms = fromList [("MVP",M44F)], slotPrimitive = Triangles, slotPrograms = [0]}], streams = [], commands = [SetRenderTarget 0,ClearRenderTarget [(Depth,VFloat 1000.0),(Color,VV4F (V4 0.5 0.0 0.4 1.0))],SetProgram 0,SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [DepthOp Less False,ColorOp (Blend (FuncAdd,FuncAdd) ((SrcAlpha,OneMinusSrcAlpha),(SrcAlpha,OneMinusSrcAlpha)) (V4 1.0 1.0 1.0 1.0)) (VV4B (V4 True True True True))]}),RenderSlot 0]}